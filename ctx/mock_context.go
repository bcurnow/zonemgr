// Code generated by MockGen. DO NOT EDIT.
// Source: ctx/context.go

// Package ctx is a generated GoMock package.
package ctx

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPluginContext is a mock of PluginContext interface.
type MockPluginContext struct {
	ctrl     *gomock.Controller
	recorder *MockPluginContextMockRecorder
}

// MockPluginContextMockRecorder is the mock recorder for MockPluginContext.
type MockPluginContextMockRecorder struct {
	mock *MockPluginContext
}

// NewMockPluginContext creates a new mock instance.
func NewMockPluginContext(ctrl *gomock.Controller) *MockPluginContext {
	mock := &MockPluginContext{ctrl: ctrl}
	mock.recorder = &MockPluginContextMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPluginContext) EXPECT() *MockPluginContextMockRecorder {
	return m.recorder
}

// GenerateReverseLookupZones mocks base method.
func (m *MockPluginContext) GenerateReverseLookupZones() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateReverseLookupZones")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GenerateReverseLookupZones indicates an expected call of GenerateReverseLookupZones.
func (mr *MockPluginContextMockRecorder) GenerateReverseLookupZones() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateReverseLookupZones", reflect.TypeOf((*MockPluginContext)(nil).GenerateReverseLookupZones))
}

// GenerateSerial mocks base method.
func (m *MockPluginContext) GenerateSerial() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSerial")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GenerateSerial indicates an expected call of GenerateSerial.
func (mr *MockPluginContextMockRecorder) GenerateSerial() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSerial", reflect.TypeOf((*MockPluginContext)(nil).GenerateSerial))
}

// PluginsDirectory mocks base method.
func (m *MockPluginContext) PluginsDirectory() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PluginsDirectory")
	ret0, _ := ret[0].(string)
	return ret0
}

// PluginsDirectory indicates an expected call of PluginsDirectory.
func (mr *MockPluginContextMockRecorder) PluginsDirectory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PluginsDirectory", reflect.TypeOf((*MockPluginContext)(nil).PluginsDirectory))
}

// SerialChangeIndexDirectory mocks base method.
func (m *MockPluginContext) SerialChangeIndexDirectory() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SerialChangeIndexDirectory")
	ret0, _ := ret[0].(string)
	return ret0
}

// SerialChangeIndexDirectory indicates an expected call of SerialChangeIndexDirectory.
func (mr *MockPluginContextMockRecorder) SerialChangeIndexDirectory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SerialChangeIndexDirectory", reflect.TypeOf((*MockPluginContext)(nil).SerialChangeIndexDirectory))
}
