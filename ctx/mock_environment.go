// Code generated by MockGen. DO NOT EDIT.
// Source: ctx/env.go

// Package ctx is a generated GoMock package.
package ctx

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEnvironment is a mock of Environment interface.
type MockEnvironment struct {
	ctrl     *gomock.Controller
	recorder *MockEnvironmentMockRecorder
}

// MockEnvironmentMockRecorder is the mock recorder for MockEnvironment.
type MockEnvironmentMockRecorder struct {
	mock *MockEnvironment
}

// NewMockEnvironment creates a new mock instance.
func NewMockEnvironment(ctrl *gomock.Controller) *MockEnvironment {
	mock := &MockEnvironment{ctrl: ctrl}
	mock.recorder = &MockEnvironmentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvironment) EXPECT() *MockEnvironmentMockRecorder {
	return m.recorder
}

// GenerateReverseLookupZones mocks base method.
func (m *MockEnvironment) GenerateReverseLookupZones() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateReverseLookupZones")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GenerateReverseLookupZones indicates an expected call of GenerateReverseLookupZones.
func (mr *MockEnvironmentMockRecorder) GenerateReverseLookupZones() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateReverseLookupZones", reflect.TypeOf((*MockEnvironment)(nil).GenerateReverseLookupZones))
}

// GenerateSerial mocks base method.
func (m *MockEnvironment) GenerateSerial() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateSerial")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GenerateSerial indicates an expected call of GenerateSerial.
func (mr *MockEnvironmentMockRecorder) GenerateSerial() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateSerial", reflect.TypeOf((*MockEnvironment)(nil).GenerateSerial))
}

// LoadValues mocks base method.
func (m *MockEnvironment) LoadValues() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadValues")
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadValues indicates an expected call of LoadValues.
func (mr *MockEnvironmentMockRecorder) LoadValues() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadValues", reflect.TypeOf((*MockEnvironment)(nil).LoadValues))
}

// PluginsDirectory mocks base method.
func (m *MockEnvironment) PluginsDirectory() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PluginsDirectory")
	ret0, _ := ret[0].(string)
	return ret0
}

// PluginsDirectory indicates an expected call of PluginsDirectory.
func (mr *MockEnvironmentMockRecorder) PluginsDirectory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PluginsDirectory", reflect.TypeOf((*MockEnvironment)(nil).PluginsDirectory))
}

// SerialChangeIndexDirectory mocks base method.
func (m *MockEnvironment) SerialChangeIndexDirectory() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SerialChangeIndexDirectory")
	ret0, _ := ret[0].(string)
	return ret0
}

// SerialChangeIndexDirectory indicates an expected call of SerialChangeIndexDirectory.
func (mr *MockEnvironmentMockRecorder) SerialChangeIndexDirectory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SerialChangeIndexDirectory", reflect.TypeOf((*MockEnvironment)(nil).SerialChangeIndexDirectory))
}
