// Code generated by MockGen. DO NOT EDIT.
// Source: utils/serial_index_manager.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSerialIndexManager is a mock of SerialIndexManager interface.
type MockSerialIndexManager struct {
	ctrl     *gomock.Controller
	recorder *MockSerialIndexManagerMockRecorder
}

// MockSerialIndexManagerMockRecorder is the mock recorder for MockSerialIndexManager.
type MockSerialIndexManagerMockRecorder struct {
	mock *MockSerialIndexManager
}

// NewMockSerialIndexManager creates a new mock instance.
func NewMockSerialIndexManager(ctrl *gomock.Controller) *MockSerialIndexManager {
	mock := &MockSerialIndexManager{ctrl: ctrl}
	mock.recorder = &MockSerialIndexManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSerialIndexManager) EXPECT() *MockSerialIndexManagerMockRecorder {
	return m.recorder
}

// GetNext mocks base method.
func (m *MockSerialIndexManager) GetNext(zoneName string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNext", zoneName)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNext indicates an expected call of GetNext.
func (mr *MockSerialIndexManagerMockRecorder) GetNext(zoneName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNext", reflect.TypeOf((*MockSerialIndexManager)(nil).GetNext), zoneName)
}
