// Code generated by MockGen. DO NOT EDIT.
// Source: plugins/soa_values_normalizer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/bcurnow/zonemgr/models"
	plugins "github.com/bcurnow/zonemgr/plugins"
	gomock "github.com/golang/mock/gomock"
)

// MockSOAValuesNormalizer is a mock of SOAValuesNormalizer interface.
type MockSOAValuesNormalizer struct {
	ctrl     *gomock.Controller
	recorder *MockSOAValuesNormalizerMockRecorder
}

// MockSOAValuesNormalizerMockRecorder is the mock recorder for MockSOAValuesNormalizer.
type MockSOAValuesNormalizerMockRecorder struct {
	mock *MockSOAValuesNormalizer
}

// NewMockSOAValuesNormalizer creates a new mock instance.
func NewMockSOAValuesNormalizer(ctrl *gomock.Controller) *MockSOAValuesNormalizer {
	mock := &MockSOAValuesNormalizer{ctrl: ctrl}
	mock.recorder = &MockSOAValuesNormalizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSOAValuesNormalizer) EXPECT() *MockSOAValuesNormalizerMockRecorder {
	return m.recorder
}

// Normalize mocks base method.
func (m *MockSOAValuesNormalizer) Normalize(identifer string, rr *models.ResourceRecord, validations plugins.Validator, generateSerial bool, serial string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Normalize", identifer, rr, validations, generateSerial, serial)
	ret0, _ := ret[0].(error)
	return ret0
}

// Normalize indicates an expected call of Normalize.
func (mr *MockSOAValuesNormalizerMockRecorder) Normalize(identifer, rr, validations, generateSerial, serial interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Normalize", reflect.TypeOf((*MockSOAValuesNormalizer)(nil).Normalize), identifer, rr, validations, generateSerial, serial)
}
