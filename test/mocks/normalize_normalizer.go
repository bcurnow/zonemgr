// Code generated by MockGen. DO NOT EDIT.
// Source: normalize/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	schema "github.com/bcurnow/zonemgr/schema"
	gomock "github.com/golang/mock/gomock"
)

// MockNormalizer is a mock of Normalizer interface.
type MockNormalizer struct {
	ctrl     *gomock.Controller
	recorder *MockNormalizerMockRecorder
}

// MockNormalizerMockRecorder is the mock recorder for MockNormalizer.
type MockNormalizerMockRecorder struct {
	mock *MockNormalizer
}

// NewMockNormalizer creates a new mock instance.
func NewMockNormalizer(ctrl *gomock.Controller) *MockNormalizer {
	mock := &MockNormalizer{ctrl: ctrl}
	mock.recorder = &MockNormalizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNormalizer) EXPECT() *MockNormalizerMockRecorder {
	return m.recorder
}

// Normalize mocks base method.
func (m *MockNormalizer) Normalize(zones map[string]*schema.Zone) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Normalize", zones)
	ret0, _ := ret[0].(error)
	return ret0
}

// Normalize indicates an expected call of Normalize.
func (mr *MockNormalizerMockRecorder) Normalize(zones interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Normalize", reflect.TypeOf((*MockNormalizer)(nil).Normalize), zones)
}
